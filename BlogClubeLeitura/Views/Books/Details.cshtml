@using System.Security.Claims
@model BlogClubeLeitura.Models.Book

@{
    ViewData["Title"] = "Book Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success text-center" role="alert">
                    @TempData["SuccessMessage"]
                </div>
            }

            <div class="card mb-4 position-relative">
                <img id="bookImage" src="@Model.CoverImagePath" class="card-img-top" alt="@Model.Title">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">@Model.Title</h5>
                        <div class="star-rating">
                            @for (var i = 0; i < Model.ModeRating; i++)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill star-icon" viewBox="0 0 16 16">
                                    <path d="M3.612 15.443c-.396.2-.833-.149-.746-.592l.83-4.73-3.522-3.356c-.33-.314-.158-.888.283-.95l4.898-.696 2.086-4.223c.197-.4.73-.4.927 0l2.086 4.223 4.898.696c.441.062.613.636.283.95l-3.522 3.356.83 4.73c.087.443-.35.792-.746.592L8 13.187l-4.389 2.256z" />
                                </svg>
                            }
                        </div>
                    </div>
                    <p class="card-text"><strong>Author:</strong> @Model.Author</p>
                    <p class="card-text"><strong>Description:</strong> @Model.Description</p>
                    <p class="card-text"><strong>Published Year:</strong> @Model.PublishedYear</p>
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <a href="@Url.Action("Edit", "Books", new { id = Model.Id })" class="btn btn-warning btn-edit" id="editButton">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                        </svg>
                    </a>
                }
            </div>

            <h3>Posts</h3>
            @if (Model.Posts?.Any() ?? false)
            {
                <div class="list-group mb-4">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="list-group-item flex-column align-items-start bg-card position-relative">
                            <div class="d-flex w-100 justify-content-between">
                                <div class="d-flex align-items-center">
                                    <img src="@post.User.ProfilePicture"
                                         class="rounded-circle me-2" style="width: 40px; height: 40px;"
                                         alt="@post.User?.UserName Profile Picture">
                                    <div class="d-flex flex-column">
                                        <h5 class="mb-1 d-flex align-items-center">
                                            @post.User?.UserName
                                            <div class="star-rating ms-2">
                                                @if (post.Rating != null)
                                                {
                                                    @for (var i = 0; i < post.Rating.Stars; i++)
                                                    {
                                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill star-icon" viewBox="0 0 16 16">
                                                            <path d="M3.612 15.443c-.396.2-.833-.149-.746-.592l.83-4.73-3.522-3.356c-.33-.314-.158-.888.283-.95l4.898-.696 2.086-4.223c.197-.4.73-.4.927 0l2.086 4.223 4.898.696c.441.062.613.636.283.95l-3.522 3.356.83 4.73c.087.443-.35.792-.746.592L8 13.187l-4.389 2.256z" />
                                                        </svg>
                                                    }
                                                }
                                            </div>
                                        </h5>
                                    </div>
                                </div>
                                <small>@post.PostedDate.ToShortDateString()</small>
                            </div>
                            <p class="mb-1">@post.Comment</p>
                            <div>
                                @if (post.Rating != null)
                                {
                                    @for (var i = 0; i < 5; i++)
                                    {
                                        if (i < post.Rating.Stars)
                                        {
                                            <span class="fa fa-star checked"></span>
                                        }
                                        else
                                        {
                                            <span class="fa fa-star"></span>
                                        }
                                    }
                                }
                            </div>
                            @if (User.IsInRole("Admin") || post.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                            {
                                <div class="d-flex mt-2">
                                    <form asp-action="DeletePost" method="post" class="delete-form me-2">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        <button type="submit" class="btn btn-danger btn-delete">×</button>
                                    </form>
                                    @if (post.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                                    {
                                        <a href="@Url.Action("Edit", "Posts", new { id = post.Id })" class="btn btn-warning btn-edit-post">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                                            </svg>
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="alert alert-warning text-center">Nenhum post encontrado para este livro.</p>
            }

            <div class="d-flex justify-content-center my-4">
                <div class="create-post-card" onclick="window.location.href='@Url.Action("Create", "Posts", new { bookId = Model.Id })'">
                    <div class="d-flex flex-column justify-content-center align-items-center">
                        <h1 class="display-4">+</h1>
                        <h5>Create New Post</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const editButton = document.getElementById('editButton');
        let lastScrollTop = 0;

        window.addEventListener('scroll', function () {
            const st = window.pageYOffset || document.documentElement.scrollTop;
            if (st > lastScrollTop) {
                editButton.style.transform = 'translateY(' + (st - lastScrollTop) + 'px)';
            } else {
                editButton.style.transform = 'translateY(-' + (lastScrollTop - st) + 'px)';
            }
            lastScrollTop = st <= 0 ? 0 : st;
        }, false);
    </script>
}

@section Styles {
    <style>
        .checked {
            color: orange;
        }

        .list-group {
            max-height: 400px; /* Altura máxima antes de começar a rolar */
            overflow-y: auto; /* Ativa a barra de rolagem vertical automaticamente quando necessário */
            overflow-x: hidden; /* Evita a barra de rolagem horizontal */
        }

        .list-group-item {
            display: flex;
            flex-direction: column;
            align-items: start;
            border-bottom: 1px solid #ccc; /* Adiciona uma linha sutil entre posts */
        }

        .bg-card {
            background: rgba(0, 123, 255, 0.2); /* Semi-transparência */
            border: 1px solid rgba(255, 255, 255, 0.2); /* Bordas semi-transparentes */
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3); /* Sombra */
            transition: background 0.9s ease-out;
            margin-bottom: 15px;
            padding: 15px;
        }

            .bg-card:hover {
                background: rgba(0, 0, 0, 0.9);
            }

        .list-group img {
            width: 100%;
            height: 80%;
            object-fit: cover;
            margin-right: 10px;
        }

        .fa-star, .star-icon {
            color: #ffc107;
        }

        .btn-delete {
            position: absolute;
            top: 49px;
            right: -10px;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            padding: 0;
            font-size: 18px;
            line-height: 30px;
            text-align: center;
            border: none;
        }

        .btn-edit-post {
            position: absolute;
            top: 74px;
            right: 41px;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            padding: 0;
            font-size: 18px;
            line-height: 30px;
            text-align: center;
            border: none;
            background-color: #ffc107;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            transform: translateY(-50%);
        }

            .btn-edit-post svg {
                width: 14px;
                height: 20px;
            }

        .delete-form {
            position: absolute;
            top: 10px;
            right: 10px;
        }

        .btn-edit {
            position: absolute;
            top: 50%;
            right: 7px;
            width: 70px;
            height: 70px;
            border-radius: 50%;
            padding: 0;
            font-size: 18px;
            line-height: 30px;
            text-align: center;
            border: none;
            background-color: #ffc107;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            transform: translateY(-50%);
        }

            .btn-edit svg {
                width: 40px;
                height: 40px;
            }

        .btn-warning {
            background-color: rgba(50, 50, 50, 1);
        }

        .card-img-top {
            width: 100%;
            height: 100%;
            max-width: 400px;
            object-fit: cover;
            transition: transform 0.6s ease-out;
            margin: 0 auto;
            padding: 15px;
        }

        .card {
            display: flex;
            flex-direction: column;
            background: rgba(0, 123, 255, 0.1);
            overflow: hidden;
            cursor: pointer;
        }

            .card:hover {
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.8);
                background: rgba(0, 0, 0, 0.9);
                transition: background 0.9s ease-out;
            }

        .card-body {
            padding: 15px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .card-title, .card-text {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            color: #ffffff;
        }

        /* Scrollbar styling */
        .list-group::-webkit-scrollbar {
            width: 8px;
        }

        .list-group::-webkit-scrollbar-thumb {
            background: rgba(0, 123, 255, 0.5);
            border-radius: 4px;
        }

            .list-group::-webkit-scrollbar-thumb:hover {
                background: rgba(0, 123, 255, 0.7);
            }

        .list-group::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.1);
            border-radius: 4px;
        }

        .star-icon {
            color: #ffc107; /* Cor dourada para as estrelas */
        }

        * > div > p, * > div {
            color: #ffff;
        }

        .create-post-card {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100px;
            background: rgba(0, 123, 255, 0.2);
            cursor: pointer;
            transition: background 0.3s ease;
        }

            .create-post-card:hover {
                background: rgba(0, 0, 0, 0.9);
                transition: background 0.9s ease-out;
            }
    </style>
}